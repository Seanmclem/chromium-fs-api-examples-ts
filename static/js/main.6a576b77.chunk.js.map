{"version":3,"sources":["pages/ShowDirectoryPicker.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FileContents","value","useEffect","setText","useState","text","name","rows","cols","getTextFileContents","fileHandle","a","getFile","file","fileText","writeFile","contents","createWritable","writer","truncate","write","close","ShowDirectoryPicker","undefined","setFileHandle","fileTextToState","handleOpenFile","window","showOpenFilePicker","handles","length","handleAddComponent","newText","replace","newFileHandle","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAGMA,EAAe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MACpBC,qBAAU,WACHD,GACCE,EAAQF,KAEb,CAACA,IALgD,MAO5BG,mBAAiB,IAPW,mBAO7CC,EAP6C,KAOvCF,EAPuC,KAUpD,OAAOF,EACH,8BACA,0BACIK,KAAK,OACLL,MAAOI,EACPE,KAAM,GACNC,KAAM,OAGV,MAGFC,EAAmB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDD,EAAWE,UADV,cACpBC,EADoB,gBAEKA,EAAKR,OAFV,cAEpBS,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZC,EAAS,uCAAG,WACrBL,EACAM,GAFqB,eAAAL,EAAA,sEAIAD,EAAWO,iBAJX,cAIfC,EAJe,gBAKfA,EAAOC,SAAS,GALD,uBAMfD,EAAOE,MAAMJ,GANE,uBAOfE,EAAOG,QAPQ,gCAQdX,GARc,4CAAH,wDAWTY,EAAsB,WAAO,IAAD,EACflB,mBAAiB,IADF,mBAChCC,EADgC,KAC1BF,EAD0B,OAEHC,wBAElCmB,GAJqC,mBAEhCb,EAFgC,KAEpBc,EAFoB,KAMjCC,EAAe,uCAAG,WAAOf,GAAP,eAAAC,EAAA,sEACCF,EAAoBC,GADrB,OAChBI,EADgB,OAEtBX,EAAQW,GAFc,2CAAH,sDAKfY,EAAc,uCAAG,4BAAAf,EAAA,sEACCgB,OAAOC,qBADR,QAEX,QADJC,EADe,cAEX,IAAPA,OAAA,EAAAA,EAASC,SAAUD,EAAQ,KAC1BL,EAAcK,EAAQ,IACtBJ,EAAgBI,EAAQ,KAJP,2CAAH,qDAQdE,EAAkB,uCAAG,8BAAApB,EAAA,0DACtBN,IAAQK,EADc,uBAEPL,EACd2B,EAAU3B,EAAK4B,QAAQ,eAAb,sCAHW,SAKOlB,EAAUL,EAAYsB,GAL7B,OAKfE,EALe,OAMrBV,EAAcU,GACdT,EAAgBS,GAPK,2CAAH,qDAWxB,OACE,sBAAKC,UAAU,MAAf,UACE,4CACA,wBAAQC,QAASV,EAAjB,uBACChB,GAAc,wBAAQ0B,QAASL,EAAjB,sCACf,cAAC,EAAD,CAAc9B,MAAOI,QC5DZgC,EALH,WAER,OAAO,cAAC,EAAD,KCAIC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a576b77.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst FileContents = ({ value }: { value?: string }) => {\n    useEffect(() => {\n        if(value){\n            setText(value)\n        }\n    }, [value])\n\n    const [text, setText] = useState<string>(\"\");\n\n\n    return value ? (\n        <div>\n        <textarea\n            name=\"file\"\n            value={text}\n            rows={40}\n            cols={40}\n        />\n        </div>\n    ) : null;\n};\n\nconst getTextFileContents = async (fileHandle: FileSystemFileHandle) => {\n  const file: File = await fileHandle.getFile();\n  const fileText: string = await file.text();\n  return fileText;\n};\n\nexport const writeFile = async (\n    fileHandle: FileSystemFileHandle, \n    contents: FileSystemWriteChunkType\n) => {\n    const writer = await fileHandle.createWritable();\n    await writer.truncate(0);// Make sure we start with an empty file\n    await writer.write(contents);\n    await writer.close();\n    return fileHandle;\n}\n\nexport const ShowDirectoryPicker = () => {\n  const [text, setText] = useState<string>(\"\");\n  const [fileHandle, setFileHandle] = useState<\n    FileSystemFileHandle | undefined\n  >(undefined);\n\n  const fileTextToState = async (fileHandle: FileSystemFileHandle) => {\n    const fileText = await getTextFileContents(fileHandle);\n    setText(fileText);\n  };\n\n  const handleOpenFile = async () => {\n    const handles = await window.showOpenFilePicker();\n    if(handles?.length && handles[0]){\n        setFileHandle(handles[0]);\n        fileTextToState(handles[0]);\n    }\n  };\n\n  const handleAddComponent = async () => {\n    if(text && fileHandle){\n        let newText = text;\n        newText = text.replace(\"{/*PHRASE*/}\",`{/*PHRASE*/}\n<InjectedComponent/>`)\n        const newFileHandle = await writeFile(fileHandle, newText);\n        setFileHandle(newFileHandle);\n        fileTextToState(newFileHandle);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>File stuff</h1>\n      <button onClick={handleOpenFile}>Open File</button>\n      {fileHandle && <button onClick={handleAddComponent}>Add component, save file</button>}\n      <FileContents value={text} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\n\nimport {useRoutes} from 'hookrouter';\nimport { ShowSaveFilePicker } from './pages/ShowSaveFilePicker';\nimport { ShowOpenFilePicker } from './pages/ShowOpenFilePicker';\nimport { FourOhFour } from './pages/FourOhFour';\nimport { HomePage } from './pages/HomePage';\nimport { ShowDirectoryPicker } from './pages/ShowDirectoryPicker';\nimport { Layout } from './pages/Layout';\nimport { FileExplorer } from './projects/FileExplorer';\n\nconst App = () => {\n    \n    return <ShowDirectoryPicker />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}